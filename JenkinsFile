import groovy.json.JsonSlurper
pipeline {
    agent any

    stages {
        stage('check if File Exist'){
            steps{
                script{
                    //find the testReference file first
                    def testRefPath = pwd() + '/src/main/resources/testRef/testRef.json';
                    // read the content of the file as a json
                    def testRefContent = sh(script: "cat /${testRefPath}",returnStdout: true).trim()
                    def testRefJson = new JsonSlurper().parseText(testRefContent)
                    def scenarioFileNames = []
                    for(int i = 0; i < testRefContent.customTests.size() ; i++){
                        if(!testRefContent.customTests.skipExecution){
                            scenarioFileNames.add(testRefContent.customTests[i].fileName)
                        }
                    }
                    echo "Found Mentioned Scenario File Names as ${scenarioFileNames}"
                    def testSourceFile = pwd() + 'src/main/resources/testData'
                    def newTestData = []
                    scenarioFileNames.each{ item ->
                        if(item){
                            def path = testSourceFile + "/" + item
                            def fileData = sh(script: "cat /${path}",returnStdout: true).trim()
                        }
                    }
                    echo "Accumulated Data for Each Scenario ${newTestData}"
//                     def fileNames = sh(script: "ls /${directoryName} -log",returnStdout: true).trim().split(/[\n\s]+/)
//                     fileNames.each{ fileName ->
//                                             if (fileName && fileName =~ /.*\.json.*/) { // Check if filename is not empty
//                                                  def path = directoryName + "/" + fileName
//                                                  def fileData = sh(script: "cat /${path}",returnStdout: true).trim()
//                                                  print(fileData)
//                                             }
//                                    }
                }
            }
        }

    }
    }

